tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: >
  TOSCA test for launching a Virtual Elastic Cluster. It will launch
  a single front-end that will be in change of managing the elasticity
  using the LRMS workload.

metadata:
  display_name: SLURM Elastic cluster (H1 IFCA)
  icon: https://github.com/indigo-dc/tosca-types/raw/master/images/slurm.png
  tag: elastic

topology_template:
  inputs:
    wn_num:
      type: integer
      description: Maximum number of WNs in the elastic cluster
      default: 5
      required: yes

    fe_cpus:
      type: integer
      description: Numer of CPUs for the front-end node
      default: 1
      required: yes

    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 1 GB
      required: yes

    wn_cpus:
      type: integer
      description: Numer of CPUs for the WNs
      default: 1
      required: yes

    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 1 GB
      required: yes

    hybrid:
      type: boolean
      description: Flag to specify that this cluster will work in an hybrid environment
      default: true
      required: false

  node_templates:

    pub_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: public

    priv_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: private

    fe_pub_port:
      type: tosca.nodes.network.Port
      properties:
        order: 1
      requirements:
        - binding: fe_server
        - link: pub_network

    fe_priv_port:
      type: tosca.nodes.network.Port
      properties:
        order: 0
      requirements:
        - binding: fe_server
        - link: priv_network

    wn_priv_port:
      type: tosca.nodes.network.Port
      properties:
        order: 0
      requirements:
        - binding: wn_server
        - link: priv_network

    elastic_cluster_front_end:
      type: tosca.nodes.indigo.ElasticCluster
      properties:
        hybrid: { get_input: hybrid }
      requirements:
        - lrms: front_end
        - wn: wn_node
        - host: fe_server

    front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Slurm
      properties:
        wn_ips: { get_attribute: [ wn_server, private_address ] }
        hybrid: { get_input: hybrid }
      requirements:
        - host: fe_server

    fe_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: slurmserver
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
              distribution: ubuntu
              type: linux
              version: 16.04

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Slurm
      properties:
        front_end_ip: { get_attribute: [ fe_server, private_address, 0 ] }
        public_front_end_ip: { get_attribute: [ fe_server, public_address, 0 ] }
        hybrid: { get_input: hybrid }
      capabilities:
        wn:
          properties:
            min_instances: 0
            max_instances: { get_input: wn_num }
      requirements:
        - host: wn_server

    wn_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: 1
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
        os:
          properties:
              distribution: ubuntu
              type: linux
              version: 16.04

  outputs:
    cluster_ip:
      value: { get_attribute: [ fe_server, public_address, 0 ] }
    cluster_creds:
      value: { get_attribute: [ fe_server, endpoint, credential, 0 ] }
    wn_ips:
      value: { get_attribute: [ wn_server, private_address ] }

  policies:
    - deploy_on_ifca:
        type: tosca.policies.indigo.SlaPlacement
        properties: { sla_id: 5dc42be3e1ac200a237b0aa4 }
