<!--

    Copyright Â© 2015-2018 Santer Reply S.p.A.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>it.reply</groupId>
	<artifactId>orchestrator</artifactId>
	<version>2.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>orchestrator</name>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<url>https://github.com/indigo-dc/orchestrator</url>
		<connection>scm:git:https://github.com/indigo-dc/orchestrator.git</connection>
		<developerConnection>scm:git:https://github.com/indigo-dc/orchestrator.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<organization>
		<name>Santer Reply S.p.A.</name>
		<url>http://www.reply.com</url>
	</organization>

	<inceptionYear>2015</inceptionYear>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<snippetsDirectory>${project.build.directory}\generated-snippets</snippetsDirectory>

		<!-- Plugins -->
		<maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
		<maven-resources-plugin.version>2.6</maven-resources-plugin.version>
		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		<maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.18.1</maven-failsafe-plugin.version>
		<license-maven-plugin.version>3.0</license-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.0</jacoco-maven-plugin.version>
		<cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
		<checkstyle-plugin.version>3.0.0</checkstyle-plugin.version>
		<checkstyle.config.location>${project.basedir}/tools/maven-checkstyle-plugin/google_checks.xml</checkstyle.config.location>

		<!-- Dependencies -->
		<org.springframework.boot.version>1.5.10.RELEASE</org.springframework.boot.version>
		<openid-connect.version>1.3.1</openid-connect.version>
		<im-java-api.version>0.4.10</im-java-api.version>
		<monitoring-pillar-domain.version>1.8.1-FINAL</monitoring-pillar-domain.version>
		<flowable.version>6.3.0</flowable.version>
		<alien4cloud.version>1.1.0-INDIGO2-SNAPSHOT</alien4cloud.version>
		<chronos-client.version>0.0.1-BETA.2</chronos-client.version>
		<marathon-client.version>0.6.0</marathon-client.version>
		<ignite.version>2.3.0</ignite.version>
	</properties>

	<distributionManagement>
		<!-- Publish versioned releases here -->
		<repository>
			<id>concept-reply-nexus-repository</id>
			<name>Concept Reply Releases Repository</name>
			<url>http://nexusconcept.cloud.reply.eu/content/repositories/releases</url>
		</repository>

		<!-- Publish snapshots here -->
		<snapshotRepository>
			<id>concept-reply-nexus-repository</id>
			<name>Concept Reply Snaphots Repository</name>
			<url>http://nexusconcept.cloud.reply.eu/content/repositories/public-snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>concept-reply-nexus-repository</id>
			<name>Concept Reply Nexus</name>
			<url>http://nexusconcept.cloud.reply.eu/content/groups/public</url>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/libs-milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>23.2-jre</version>
			</dependency>
			<!-- Alien4Cloud requires v1.7.0 -->
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>1.7.5</version>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>3.8.0</version>
			</dependency>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${org.springframework.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
	
		<!-- Spring Boot Starters -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>jackson-mapper-asl</artifactId>
					<groupId>org.codehaus.jackson</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jta-bitronix</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mitre</groupId>
			<artifactId>openid-connect-client</artifactId>
			<version>${openid-connect.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>javax.persistence</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-test</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- Ignite -->
        <dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-spring</artifactId>
            <version>${ignite.version}</version>
            <exclusions>
            	<exclusion>
            		<groupId>org.apache.ignite</groupId>
            		<artifactId>ignite-indexing</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>
        
        <dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-slf4j</artifactId>
            <version>${ignite.version}</version>
        </dependency>
        
		<dependency>
			<groupId>es.upv.i3m.grycap</groupId>
			<artifactId>im-java-api</artifactId>
			<version>${im-java-api.version}</version>
		</dependency>
		
		<!-- Flowable -->
		<dependency>
			<groupId>org.flowable</groupId>
			<artifactId>flowable-spring-boot-starter-process</artifactId>
			<version>${flowable.version}</version>
		</dependency>
	
		<dependency>
			<groupId>alien4cloud</groupId>
			<artifactId>alien4cloud-core</artifactId>
			<version>${alien4cloud.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.ldap</groupId>
					<artifactId>spring-ldap-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.ldap</groupId>
					<artifactId>spring-ldap-core-tiger</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.springfox</groupId>
					<artifactId>springfox-swagger2</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.social</groupId>
					<artifactId>spring-social-github</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.social</groupId>
					<artifactId>spring-social-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.social</groupId>
					<artifactId>spring-social-config</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.security</groupId>
					<artifactId>spring-security-ldap</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.security.extensions</groupId>
					<artifactId>spring-security-saml2-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>it.reply</groupId>
			<artifactId>monitoring-pillar-domain</artifactId>
			<version>${monitoring-pillar-domain.version}</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.mesosphere</groupId>
			<artifactId>marathon-client</artifactId>
			<version>${marathon-client.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>it.infn.ba.indigo</groupId>
			<artifactId>chronos-client</artifactId>
			<version>${chronos-client.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jgrapht</groupId>
			<artifactId>jgrapht-core</artifactId>
			<version>1.0.1</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		
		<!-- annotations and static code analysis -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.checkerframework</groupId>
			<artifactId>checker-qual</artifactId>
			<version>2.1.14</version>
			<scope>compile</scope>
		</dependency>

		<!-- logging -->
		<dependency>
		    <groupId>net.logstash.logback</groupId>
		    <artifactId>logstash-logback-encoder</artifactId>
		    <version>4.11</version>
		    <scope>runtime</scope>
		</dependency>
		<!-- needed for conditionals in logback configuration -->
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<!-- test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>1.3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.5.2</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>1.1.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>


	<profiles>
		<profile>
			<id>restdocs</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>1.5.2</version>
						<configuration>
							<sourceDirectory>${basedir}/asciidoc</sourceDirectory>
							<outputDirectory>${basedir}/restdocs</outputDirectory>
						</configuration>
						<executions>
							<execution>
								<id>generate-docs</id>
								<phase>package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html</backend>
									<doctype>book</doctype>
									<attributes>
										<snippets>${snippetsDirectory}</snippets>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>test-with-jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco-maven-plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>compile-with-errorprone</id>
			<activation>
				<!-- <property> <name>!m2e.version</name> </property> -->
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>${maven-compiler-plugin.version}</version>
						<configuration>
							<compilerId>javac-with-errorprone</compilerId>
							<forceJavacCompilerUse>true</forceJavacCompilerUse>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.plexus</groupId>
								<artifactId>plexus-compiler-javac-errorprone</artifactId>
								<version>2.8</version>
							</dependency>
							<!-- override plexus-compiler-javac-errorprone's dependency on Error 
								Prone with the latest version -->
							<dependency>
								<groupId>com.google.errorprone</groupId>
								<artifactId>error_prone_core</artifactId>
								<version>2.1.0</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<finalName>orchestrator</finalName>
		<pluginManagement>
			<!-- All plugins ordered by shortname (antrun, assembly ...) -->
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.mycila</groupId>
										<artifactId>
											license-maven-plugin
										</artifactId>
										<versionRange>
											[1.0,)
										</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- Build number plugin -->
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>2.1.13</version>
					<executions>
						<execution>
							<goals>
								<goal>revision</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<verbose>true</verbose>
						<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
						<generateGitPropertiesFile>true</generateGitPropertiesFile>
						<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
					<configuration>
						<header>tools/maven-license-plugin/APACHE-2-header.tmpl</header>
						<includes>
							<include>docker/**</include>
							<include>src/main/java/**</include>
							<include>src/test/java/**</include>
							<include>kubernetes/**</include>
							<include>pom.xml</include>
						</includes>
						<excludes>
							<exclude>**/*.war</exclude>
						</excludes>
						<useDefaultExcludes>true</useDefaultExcludes>
						<useDefaultMapping>true</useDefaultMapping>
						<strictCheck>true</strictCheck>
						<properties>
							<owner>${project.organization.name}</owner>
						</properties>
						<headerDefinitions>
							<headerDefinition>tools/maven-license-plugin/myc-javapkg.xml</headerDefinition>
						</headerDefinitions>
						<mapping>
							<java>JavaPackage_style</java>
						</mapping>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.mycila</groupId>
							<artifactId>license-maven-plugin-git</artifactId>
							<version>${license-maven-plugin.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${cobertura-maven-plugin.version}</version>
					<configuration>
						<instrumentation>
							<ignoreMethodAnnotations>
								<ignoreMethodAnnotation>lombok.Generated</ignoreMethodAnnotation>
							</ignoreMethodAnnotations>
						</instrumentation>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
		<plugin>
			<groupId>pl.project13.maven</groupId>
			<artifactId>git-commit-id-plugin</artifactId>
		</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<delimiters>
						<delimiter>@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin.version}</version>
				<configuration>
					<outputDirectory>${basedir}/docker</outputDirectory>
					<archiveClasses>true</archiveClasses>
                	<failOnMissingWebXml>false</failOnMissingWebXml>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${org.springframework.boot.version}</version>
				<configuration>
					<mainClass>it.reply.orchestrator.Application</mainClass>
					<outputDirectory>${basedir}/docker</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.10</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>checkstyle</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<failOnViolation>true</failOnViolation>
							<violationSeverity>warning</violationSeverity>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>check-license-headers</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<excludedGroups>it.reply.orchestrator.IntegrationTest</excludedGroups>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<includes>
						<include>**/*.java</include>
					</includes>
					<groups>it.reply.orchestrator.IntegrationTest</groups>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<resources>
			<!-- Filter .properties and replace placeholders (using Maven properties 
				or filtered properties - from the '<build> -> <filters'> section of the POM) -->
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<!-- Also include in the final package the other resources, not being 
				.properties, without filtering them -->
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
			</resource>
		</resources>
	</build>
	<reporting>
		<plugins>

			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.8</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle-plugin.version}</version>
				<configuration>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<failOnViolation>true</failOnViolation>
					<configLocation>google_checks.xml</configLocation>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<reportOutputDirectory>apidocs</reportOutputDirectory>
				</configuration>
			</plugin>
			
			<!-- Cobertura -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura-maven-plugin.version}</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>
			
		</plugins>
	</reporting>
</project>
