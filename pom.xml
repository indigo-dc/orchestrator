<!--

    Copyright Â© 2015-2018 Santer Reply S.p.A.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>it.reply</groupId>
	<artifactId>orchestrator</artifactId>
	<version>2.1.2-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>orchestrator</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.13.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<url>https://github.com/indigo-dc/orchestrator</url>
		<connection>scm:git:https://github.com/indigo-dc/orchestrator.git</connection>
		<developerConnection>scm:git:https://github.com/indigo-dc/orchestrator.git</developerConnection>
		<tag>releases/2-1-stable</tag>
	</scm>

	<organization>
		<name>Santer Reply S.p.A.</name>
		<url>http://www.reply.com</url>
	</organization>

	<inceptionYear>2015</inceptionYear>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<skipTests>false</skipTests>
		<skipUnitTests>${skipTests}</skipUnitTests>
		<skipItTests>${skipTests}</skipItTests>

		<!-- Plugins -->
		<asciidoctor-maven-plugin.version>1.5.2</asciidoctor-maven-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<license-maven-plugin.version>3.0</license-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.2</jacoco-maven-plugin.version>
		<checkstyle-plugin.version>3.0.0</checkstyle-plugin.version>
		<puppycrawl-tools-checkstyle.version>8.10</puppycrawl-tools-checkstyle.version>

		<!-- Dependencies -->
		<guava.version>23.2-jre</guava.version>
		<elasticsearch.version>1.7.5</elasticsearch.version>
		<assertj.version>3.8.0</assertj.version>
		<openid-connect.version>1.3.2</openid-connect.version>
    <im-java-api.version>0.4.12</im-java-api.version>
		<monitoring-pillar-domain.version>1.8.1-FINAL</monitoring-pillar-domain.version>
		<flowable.version>6.3.0</flowable.version>
		<alien4cloud.version>1.1.0-INDIGO2-BETA.1</alien4cloud.version>
    <chronos-client.version>0.0.1</chronos-client.version>
		<marathon-client.version>0.6.0</marathon-client.version>
		<ignite.version>2.3.0</ignite.version>
		<java-uuid-generator.version>3.1.3</java-uuid-generator.version>
		<jgrapht-core.version>1.0.1</jgrapht-core.version>
		<datasource-proxy.version>1.4.9</datasource-proxy.version>
		<checker-qual.version>2.1.14</checker-qual.version>
		<logstash-logback-encoder.version>4.11</logstash-logback-encoder.version>
		<spring-test-dbunit.version>1.3.0</spring-test-dbunit.version>
		<dbunit.version>2.5.2</dbunit.version>
		<junit-params.version>1.1.0</junit-params.version>
	</properties>

	<distributionManagement>
		<!-- Publish versioned releases here -->
		<repository>
			<id>concept-reply-nexus-repository</id>
			<name>Concept Reply Releases Repository</name>
			<url>http://nexusconcept.cloud.reply.eu/content/repositories/releases</url>
		</repository>

		<!-- Publish snapshots here -->
		<snapshotRepository>
			<id>concept-reply-nexus-repository</id>
			<name>Concept Reply Snaphots Repository</name>
			<url>http://nexusconcept.cloud.reply.eu/content/repositories/public-snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>concept-reply-nexus-repository</id>
			<name>Concept Reply Nexus</name>
			<url>http://nexusconcept.cloud.reply.eu/content/groups/public</url>
		</repository>
	</repositories>


	<dependencies>
	
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
	
		<!-- Spring Boot Starters -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>jackson-mapper-asl</artifactId>
					<groupId>org.codehaus.jackson</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jta-bitronix</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mitre</groupId>
			<artifactId>openid-connect-client</artifactId>
			<version>${openid-connect.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>javax.persistence</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-test</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
    </dependency>

    <!-- Ignite -->
        <dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-spring</artifactId>
            <version>${ignite.version}</version>
            <exclusions>
            	<exclusion>
            		<groupId>org.apache.ignite</groupId>
            		<artifactId>ignite-indexing</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>
        
        <dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-slf4j</artifactId>
            <version>${ignite.version}</version>
        </dependency>
        
		<dependency>
			<groupId>es.upv.i3m.grycap</groupId>
			<artifactId>im-java-api</artifactId>
			<version>${im-java-api.version}</version>
		</dependency>
		
		<!-- Flowable -->
		<dependency>
			<groupId>org.flowable</groupId>
			<artifactId>flowable-spring-boot-starter-process</artifactId>
			<version>${flowable.version}</version>
		</dependency>
	
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
	
		<dependency>
			<groupId>com.fasterxml.uuid</groupId>
			<artifactId>java-uuid-generator</artifactId>
			<version>${java-uuid-generator.version}</version>
		</dependency>
	
		<dependency>
			<groupId>alien4cloud</groupId>
			<artifactId>alien4cloud-core</artifactId>
			<version>${alien4cloud.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.ldap</groupId>
					<artifactId>spring-ldap-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.ldap</groupId>
					<artifactId>spring-ldap-core-tiger</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.springfox</groupId>
					<artifactId>springfox-swagger2</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.social</groupId>
					<artifactId>spring-social-github</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.social</groupId>
					<artifactId>spring-social-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.social</groupId>
					<artifactId>spring-social-config</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.security</groupId>
					<artifactId>spring-security-ldap</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.security.extensions</groupId>
					<artifactId>spring-security-saml2-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>it.reply</groupId>
			<artifactId>monitoring-pillar-domain</artifactId>
			<version>${monitoring-pillar-domain.version}</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.mesosphere</groupId>
			<artifactId>marathon-client</artifactId>
			<version>${marathon-client.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>it.infn.ba.indigo</groupId>
			<artifactId>chronos-client</artifactId>
			<version>${chronos-client.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jgrapht</groupId>
			<artifactId>jgrapht-core</artifactId>
			<version>${jgrapht-core.version}</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>net.ttddyy</groupId>
			<artifactId>datasource-proxy</artifactId>
			<version>${datasource-proxy.version}</version>
		</dependency>
		
		<!-- annotations and static code analysis -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.checkerframework</groupId>
			<artifactId>checker-qual</artifactId>
			<version>${checker-qual.version}</version>
			<scope>compile</scope>
		</dependency>

		<!-- logging -->
		<dependency>
		    <groupId>net.logstash.logback</groupId>
		    <artifactId>logstash-logback-encoder</artifactId>
		    <version>${logstash-logback-encoder.version}</version>
		    <scope>runtime</scope>
		</dependency>
		<!-- needed for conditionals in logback configuration -->
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<!-- test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>${spring-test-dbunit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>${dbunit.version}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>${junit-params.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>


	<profiles>
		<profile>
			<id>restdocs</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor-maven-plugin.version}</version>
						<configuration>
							<sourceDirectory>${basedir}/asciidoc</sourceDirectory>
							<outputDirectory>${basedir}/restdocs</outputDirectory>
						</configuration>
						<executions>
							<execution>
								<id>generate-docs</id>
								<phase>package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html</backend>
									<doctype>book</doctype>
									<attributes>
										<snippets>${project.build.directory}/generated-snippets</snippets>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
      <id>m2e</id>
      <activation>
        <property>
          <name>m2e.version</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.m2e</groupId>
            <artifactId>lifecycle-mapping</artifactId>
            <version>1.0.0</version>
            <configuration>
              <lifecycleMappingMetadata>
                <pluginExecutions>
                  <pluginExecution>
                    <pluginExecutionFilter>
                      <groupId>com.mycila</groupId>
                      <artifactId>
                        license-maven-plugin
                      </artifactId>
                      <versionRange>
                        [1.0,)
                      </versionRange>
                      <goals>
                        <goal>check</goal>
                      </goals>
                    </pluginExecutionFilter>
                    <action>
                      <ignore />
                    </action>
                  </pluginExecution>
                </pluginExecutions>
              </lifecycleMappingMetadata>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>test-with-jacoco</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>report-it</id>
                <phase>verify</phase>
                <goals>
                  <goal>report-integration</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
	</profiles>

	<build>
		<finalName>orchestrator</finalName>
		<pluginManagement>
			<!-- All plugins ordered by shortname (antrun, assembly ...) -->
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<configuration>
						<filesets>
							<fileset>
								<directory>docker/</directory>
								<includes>
									<include>**/*.jar</include>
									<include>**/*.war</include>
								</includes>
								<followSymlinks>false</followSymlinks>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
					<configuration>
						<header>tools/maven-license-plugin/APACHE-2-header.tmpl</header>
						<includes>
							<include>docker/**</include>
							<include>src/main/java/**</include>
							<include>src/test/java/**</include>
							<include>kubernetes/**</include>
							<include>pom.xml</include>
						</includes>
						<useDefaultExcludes>true</useDefaultExcludes>
						<useDefaultMapping>true</useDefaultMapping>
						<strictCheck>true</strictCheck>
						<properties>
							<owner>${project.organization.name}</owner>
						</properties>
						<headerDefinitions>
							<headerDefinition>tools/maven-license-plugin/myc-javapkg.xml</headerDefinition>
						</headerDefinitions>
						<mapping>
							<java>JavaPackage_style</java>
						</mapping>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.mycila</groupId>
							<artifactId>license-maven-plugin-git</artifactId>
							<version>${license-maven-plugin.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<instrumentation>
							<ignoreMethodAnnotations>
								<ignoreMethodAnnotation>lombok.Generated</ignoreMethodAnnotation>
							</ignoreMethodAnnotations>
						</instrumentation>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
						<tagNameFormat>v@{project.version}</tagNameFormat>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archiveClasses>true</archiveClasses>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>it.reply.orchestrator.Application</mainClass>
					<outputDirectory>${basedir}/docker</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${puppycrawl-tools-checkstyle.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<failOnViolation>true</failOnViolation>
							<violationSeverity>warning</violationSeverity>
							<configLocation>${project.basedir}/tools/maven-checkstyle-plugin/google_checks.xml</configLocation>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>check-license-headers</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skipUnitTests}</skipTests>
					<excludedGroups>it.reply.orchestrator.IntegrationTest</excludedGroups>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<skipTests>${skipItTests}</skipTests>
					<includes>
						<include>**/*.java</include>
					</includes>
					<groups>it.reply.orchestrator.IntegrationTest</groups>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<reportOutputDirectory>apidocs</reportOutputDirectory>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>
